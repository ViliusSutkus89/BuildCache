# test.yml
#
# Copyright (C) 2022 ViliusSutkus89.com
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3,
# as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

name: test
on:
  workflow_dispatch:
  push:
    paths-ignore:
      - '**.md'
      - '.github/**'
      - '!.github/workflows/test.yml'

permissions:
  actions: none
  checks: none
  contents: none
  deployments: none
  issues: none
  packages: none
  pull-requests: none
  repository-projects: none
  security-events: none
  statuses: none

jobs:
#  build:
#    if: false
#    runs-on: macos-11
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-java@v3
#        with:
#          distribution: temurin
#          java-version: 17
#
#      - name: Cache debug keystore
#        uses: actions/cache@v3
#        with:
#          path: ~/.android/debug.keystore
#          key: debug-keystore-${{ secrets.CACHE_KEY_SUFFIX }}
#
##      - uses: android-actions/setup-android@v2
#
#      - run: ./gradlew assembleDebug
#
#      - uses: actions/upload-artifact@v3
#        with:
#          name: debug-keystore
#          path: ~/.android/debug.keystore
#
#      - run: tar -cf app-build.tar app/build
#      - uses: actions/upload-artifact@v3
#        with:
#          name: app-build.tar
#          path: app-build.tar

  test:
#    needs: build
    # Only macos VMs are available with exposed CPU extensions to run hardware accelerated emulator
    runs-on: macos-11
#    strategy:
#      fail-fast: false
#      matrix:
#        include:
#          - arch: x86
#            api-level: 16
#            api-type-target: default
    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-java@v3
#        with:
#          distribution: temurin
#          java-version: 17

#      - uses: actions/download-artifact@v3
#        with:
#          name: debug-keystore
#          path: ~/.android

#      - name: Cache AVD (Android Virtual Device)
#        uses: actions/cache@v3
#        id: adb-and-avd-cache
#        with:
#          path: adb-and-avd-cache.tar
#          key: adb-and-avd-${{ matrix.arch }}-${{ matrix.api-level }}-${{ matrix.api-type-target }}-${{ secrets.CACHE_KEY_SUFFIX }}
#
#      # DEBUG
#      - run: tar --list -f adb-and-avd-cache.tar
#        if: steps.adb-and-avd-cache.cache-hit == 'true'
#
#      - name: Extract AVD
#        if: steps.adb-and-avd-cache.cache-hit == 'true'
#        run: tar -xf adb-and-avd-cache.tar -C ~/

      - run: mkdir -p ~/.android/avd
      - run: touch ~/.android/avd/test.avd
      - run: touch ~/.android/adbkey

      - name: Create AVD and generate snapshot
        if: false
#        if: steps.adb-and-avd-cache.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          api-level: 16
          arch: x86
          target: default
#          api-level: ${{ matrix.api-level }}
#          arch: ${{ matrix.arch }}
#          target: ${{ matrix.api-type-target }}
          sdcard-path-or-size: 1G
          disk-size: 8G
          script: echo "Generated AVD snapshot for caching."

      - run: ls -lhaR ~/.android/adb* ~/.android/avd/*
      - run: du -hs ~/.android/adb* ~/.android/avd/*

      - run: pwd
        working-directory: $HOME

      - run: pwd
        working-directory: ~/

      - run: echo $HOME
      - run: |
          cd $HOME
          tar -cf adb-and-avd-cache.tar $HOME/.android/adb* .android/avd/*
#      - run: tar -C $HOME -cf adb-and-avd-cache.tar $HOME/.android/adb* $HOME/.android/avd/*
#        if: steps.adb-and-avd-cache.cache-hit != 'true'

      # DEBUG
      - run: ls -lh $HOME/adb-and-avd-cache.tar
      - run: tar --list -f $HOME/adb-and-avd-cache.tar
#        if: steps.adb-and-avd-cache.cache-hit != 'true'

#      - uses: actions/download-artifact@v3
#        with:
#          name: app-build.tar
#      - run: tar -xf app-build.tar
#
#      - name: Run tests
#        uses: reactivecircus/android-emulator-runner@v2
#        with:
#          force-avd-creation: false
#          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -no-snapshot-save
#          api-level: ${{ matrix.api-level }}
#          arch: ${{ matrix.arch }}
#          target: ${{ matrix.api-type-target }}
#          script: |
#            adb uninstall com.viliussutkus89.buildcache || echo "Didn't need to uninstall"
#            time ./gradlew connectedCheck

#  unCachedTest:
#    if: false
#    # Only macos VMs are available with exposed CPU extensions to run hardware accelerated emulator
#    runs-on: macos-11
#    strategy:
#      fail-fast: false
#      matrix:
#        include:
#          - arch: x86
#            api-level: 16
#            api-type-target: default
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-java@v3
#        with:
#          distribution: temurin
#          java-version: 17
##      - uses: android-actions/setup-android@v2
#
#      - name: Run tests
#        uses: reactivecircus/android-emulator-runner@v2
#        with:
#          force-avd-creation: false
#          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -no-snapshot-save
#          api-level: ${{ matrix.api-level }}
#          arch: ${{ matrix.arch }}
#          target: ${{ matrix.api-type-target }}
#          script: time ./gradlew connectedCheck
#          sdcard-path-or-size: 1G
#          disk-size: 8G
